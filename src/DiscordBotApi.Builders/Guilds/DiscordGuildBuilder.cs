// -------------------------------------------------------------------------------------------------
// <copyright file="DiscordGuildBuilder.cs" company="kpop.fan">
//   Copyright (c) 2025 kpop.fan. All rights reserved.
// </copyright>
// -------------------------------------------------------------------------------------------------

namespace DiscordBotApi.Builders.Guilds;

// WARNING! This file was generated by a tool.
//          Any changes made to this file will be lost if the code is regenerated.
public class DiscordGuildBuilder
{
	private int? _approximateMemberCount;
	private readonly List<DiscordEmoji> _emojis = new();
	private ulong _id = default!;
	private int? _memberCount;
	private List<DiscordGuildMember>? _members;
	private string _name = default!;
	private DiscordGuildPremiumTier _premiumTier = default!;
	private int? _premiumTierSubscriptionCount;
	private readonly List<DiscordRole> _roles = new();

	public DiscordGuildBuilder WithApproximateMemberCount(int? approximateMemberCount)
	{
		_approximateMemberCount = approximateMemberCount;
		return this;
	}

	public DiscordGuildBuilder AddEmoji(Action<DiscordEmojiBuilder> builderAction)
	{
		var builder = new DiscordEmojiBuilder();
		builderAction(obj: builder);
		_emojis.Add(item: builder.Build());
		return this;
	}

	public DiscordGuildBuilder AddEmoji(DiscordEmoji item)
	{
		_emojis.Add(item: item);
		return this;
	}

	public DiscordGuildBuilder WithId(ulong id)
	{
		_id = id;
		return this;
	}

	public DiscordGuildBuilder WithMemberCount(int? memberCount)
	{
		_memberCount = memberCount;
		return this;
	}

	public DiscordGuildBuilder AddMember(Action<DiscordGuildMemberBuilder> builderAction)
	{
		var builder = new DiscordGuildMemberBuilder();
		builderAction(obj: builder);
		_members ??= new List<DiscordGuildMember>();
		_members.Add(item: builder.Build());
		return this;
	}

	public DiscordGuildBuilder AddMember(DiscordGuildMember item)
	{
		_members ??= new List<DiscordGuildMember>();
		_members.Add(item: item);
		return this;
	}

	public DiscordGuildBuilder WithName(string name)
	{
		_name = name;
		return this;
	}

	public DiscordGuildBuilder WithPremiumTier(DiscordGuildPremiumTier premiumTier)
	{
		_premiumTier = premiumTier;
		return this;
	}

	public DiscordGuildBuilder WithPremiumTierSubscriptionCount(int? premiumTierSubscriptionCount)
	{
		_premiumTierSubscriptionCount = premiumTierSubscriptionCount;
		return this;
	}

	public DiscordGuildBuilder AddRole(Action<DiscordRoleBuilder> builderAction)
	{
		var builder = new DiscordRoleBuilder();
		builderAction(obj: builder);
		_roles.Add(item: builder.Build());
		return this;
	}

	public DiscordGuildBuilder AddRole(DiscordRole item)
	{
		_roles.Add(item: item);
		return this;
	}

	public DiscordGuild Build() =>
		new()
		{
			ApproximateMemberCount = _approximateMemberCount,
			Emojis = _emojis.ToImmutableArray(),
			Id = _id,
			MemberCount = _memberCount,
			Members = _members?.ToImmutableArray(),
			Name = _name,
			PremiumTier = _premiumTier,
			PremiumTierSubscriptionCount = _premiumTierSubscriptionCount,
			Roles = _roles.ToImmutableArray(),
		};
}